[{"D:\\REACTJS\\secondapp\\src\\reportWebVitals.js":"1","D:\\REACTJS\\secondapp\\src\\index.js":"2","D:\\REACTJS\\secondapp\\src\\App.jsx":"3","D:\\REACTJS\\secondapp\\src\\components\\NewTask.jsx":"4","D:\\REACTJS\\secondapp\\src\\components\\Task.jsx":"5","D:\\REACTJS\\secondapp\\src\\components\\Input.jsx":"6"},{"size":362,"mtime":1606187811079,"results":"7","hashOfConfig":"8"},{"size":521,"mtime":1610903387121,"results":"9","hashOfConfig":"8"},{"size":1633,"mtime":1610903387116,"results":"10","hashOfConfig":"8"},{"size":533,"mtime":1610903387118,"results":"11","hashOfConfig":"8"},{"size":1686,"mtime":1610903387136,"results":"12","hashOfConfig":"8"},{"size":555,"mtime":1610903387140,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"8ojoq6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\REACTJS\\secondapp\\src\\reportWebVitals.js",[],["29","30"],"D:\\REACTJS\\secondapp\\src\\index.js",[],"D:\\REACTJS\\secondapp\\src\\App.jsx",["31","32"],"import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Newtask from './components/NewTask.jsx';\r\nimport star from './components/pngwing.com.png';\r\nimport Task from './components/Task.jsx';\r\n\r\nfunction App(){\r\n  let taskdata = [\r\n    {\r\n      'name': 'GAME',\r\n      'content': 'Call of Duty',\r\n      'status':'Finished'\r\n    },\r\n    {\r\n      'name': 'SOCCER',\r\n      'content': 'Manchester United',\r\n      'status':'Pending'\r\n    },\r\n    {\r\n      'name': 'COMIC',\r\n      'content': 'OnePiece',\r\n      'status':'Cancel'\r\n    },\r\n    {\r\n      'name': 'ANIME',\r\n      'content': 'Attack on Titan',\r\n      'status':'Finished'\r\n    }\r\n  ]\r\n\r\n  const [task, setTask] = useState(taskdata);\r\n\r\n  const getdata = (data, key, statusValue) => {\r\n    if (!data&&task[key].status===statusValue){return false}\r\n    let taskUpdate = [...task];\r\n    if (data) { taskUpdate[key].name = data; }\r\n    if (task[key].status!==statusValue) {taskUpdate[key].status = statusValue;}\r\n    setTask(taskUpdate);\r\n  }\r\n\r\n  const addfn = (value) => {\r\n    let taskUpdate = [...task];\r\n    taskUpdate.push({ name: value, content:'', status:'Pending' });\r\n    setTask(taskUpdate);\r\n  }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h2><img src={star} />TO DO LIST<img src={star} /></h2>\r\n          <Newtask addfn={addfn}></Newtask>\r\n          <div className=\"main\">\r\n              <ul>\r\n              {task.map((item, index) => <Task {...item} getdata={getdata} key={index} index={index}/>)}\r\n              </ul>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\REACTJS\\secondapp\\src\\components\\NewTask.jsx",[],"D:\\REACTJS\\secondapp\\src\\components\\Task.jsx",[],"D:\\REACTJS\\secondapp\\src\\components\\Input.jsx",[],["33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":50,"column":15,"nodeType":"41","endLine":50,"endColumn":33},{"ruleId":"39","severity":1,"message":"40","line":50,"column":43,"nodeType":"41","endLine":50,"endColumn":61},{"ruleId":"35","replacedBy":"42"},{"ruleId":"37","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["44"],["45"],"no-global-assign","no-unsafe-negation"]